#!/usr/bin/env python3

# Author: Jamie Strandboge <jamie@ubuntu.com>
# Copyright (C) 2012-2024 Canonical Ltd.
#
# This script is distributed under the terms and conditions of the GNU General
# Public License, Version 2 or later. See http://www.gnu.org/copyleft/gpl.html
# for details.

import pickle
import json
import optparse
import os
import sys

# TODO: move these to usn_lib.py
def save_database_json(database, db_filename):
    '''Save usn database'''
    filename = os.path.expanduser(db_filename)
    with open(filename, 'w') as f:
        json.dump(database, f)

def convert_pickle_to_json(indb, outdb, prefix=None):
    '''Convert a pickle database into a json'''
    filename = os.path.expanduser(indb)
    if not os.path.isfile(filename):
        return False

    print(f"INFO: Loading {indb}...", file=sys.stderr)
    with open(indb, 'rb') as f:
        db = pickle.load(f, encoding="utf-8")

    if prefix:
        for k in db.keys():
            for j in db[k].keys():
                if j == 'id':
                    db[k][j] = f"{prefix}{db[k][j]}"

    print(f"INFO: Saving {outdb}...", file=sys.stderr)
    save_database_json(db, outdb)

#
# main
#
if __name__ == "__main__":
    parser = optparse.OptionParser()
    parser.add_option("-i", "--input-file", dest="infile", help="pickle data file", metavar="FILE")
    parser.add_option("-o", "--output-file", dest="outfile", help="target json data file", metavar="FILE")
    parser.add_option("-p", "--prefix", dest="prefix",
        help="prefix for value of id field. eg: 'USN-'", default=None)
    (opt, args) = parser.parse_args()

    if not opt.infile:
        print("Must specify --input-file", file=sys.stderr)
        sys.exit(1)
    elif not opt.outfile:
        print("Must specify --output-file", file=sys.stderr)
        sys.exit(1)
    elif not os.path.isfile(opt.infile):
        print(f"'{opt.infile}' does not exist", file=sys.stderr)
        sys.exit(1)
    elif os.path.exists(opt.outfile):
        print(f"'{opt.outfile}' already exists", file=sys.stderr)
        sys.exit(1)

    convert_pickle_to_json(opt.infile, opt.outfile, opt.prefix)
    sys.exit(0)
