#!/usr/bin/env pytest-3
# -*- coding: utf-8 -*-
#
# Test functions for scripts/uct/config.py
#
# Author: Steve Beattie <sbeattie@ubuntu.com>
# Copyright (C) 2005-2024 Canonical Ltd.
#
# This script is distributed under the terms and conditions of the GNU General
# Public License, Version 2 or later. See http://www.gnu.org/copyleft/gpl.html
# for details.

import os
import pytest

# _read_config and _read_config_cached are private functions in
# uct/config.py for testing
# users of uct/config.py should only use read_config()
from uct.config import _read_config, _read_config_cached

TEST_DATA_DIR = "test/uct/config/"


class TestUCTConfig:

    def test_config_file_not_exist(self):
        with pytest.raises(ValueError):
            _read_config(os.path.join(TEST_DATA_DIR, "does-not-exist.conf"))

    def test_plb_auth_config_not_exist(self):
        with pytest.raises(ValueError):
            _read_config(os.path.join(TEST_DATA_DIR, "plb_auth_does_not_exist.conf"))

    def test_no_plb_auth_entry(self):
        with pytest.raises(ValueError):
            _read_config(os.path.join(TEST_DATA_DIR, "no_plb_auth_entry.conf"))

    def test_plb_auth_config_simple(self):
        expected = {
            'plb_authentication': '/dev/null'
        }
        config = _read_config(os.path.join(TEST_DATA_DIR, "plb_auth_dev_null.conf"))
        assert config == expected

    def test_returned_config_is_singleton(self):
        first_config = _read_config_cached(os.path.join(TEST_DATA_DIR, "uct.conf"))
        second_config = _read_config_cached(os.path.join(TEST_DATA_DIR, "uct.conf"))
        assert first_config is second_config
