#!/usr/bin/env pytest-3
# -*- coding: utf-8 -*-
#
# Author: Steve Beattie <sbeattie@ubuntu.com>
# Copyright (C) 2020 Canonical Ltd.
#
# This script is distributed under the terms and conditions of the GNU General
# Public License, Version 3 or later. See http://www.gnu.org/copyleft/gpl.html
# for details.
#
# Simple tests for kernel_lib

import pytest
from kernel_lib import (
    kernel_meta_abi,
    kernel_package_abi,
    kernel_package_version,
    convert_name_to_meta,
    convert_name_to_signed,
    is_kernel_cna_cve,
    get_affected_subsystems,
    get_kernel_break_fix
)
from uct.config import read_uct_config

class TestKernelMabiCalc:
    def test_basic_version(self):
        assert kernel_meta_abi("5.4.0.40.44") == 40

    def test_hwe_version(self):
        assert kernel_meta_abi("5.4.0.40.44~18.04.32") == 40

    # noble kernel meta package versions were changed to match the
    # primary package versioning scheme UPSTREAM_VERSION-ABI.BUILD
    def test_noble_newer_version(self):
        assert kernel_meta_abi("6.8.0-14.15") == 14

    def test_noble_newer_derieved_version(self):
        assert kernel_meta_abi("6.8.0-1014.15") == 1014


class TestKernelVersionCalc:
    def test_basic_version(self):
        assert kernel_package_version("4.15.0-45.54") == "4.15.0"

    def test_hwe_version(self):
        assert kernel_package_version("5.4.0-40.44~18.04.32") == "5.4.0"


class TestKernelABICalc:
    def test_basic_version(self):
        assert kernel_package_abi("4.15.0-45.54") == 45

    def test_hwe_version(self):
        assert kernel_package_abi("5.4.0-40.44~18.04.32") == 40


class TestKernelComputeMetaName:
    def test_basic_kernel(self):
        assert convert_name_to_meta("linux") == "linux-meta"

    def test_hwe_kernel(self):
        assert convert_name_to_meta("linux-hwe") == "linux-meta-hwe"

    def test_hwe_versioned_kernel(self):
        assert convert_name_to_meta("linux-hwe-5.4") == "linux-meta-hwe-5.4"

    def test_bad_kernel_name(self):
        with pytest.raises(ValueError):
            convert_name_to_meta("not-linux")


class TestKernelComputeSignedName:
    def test_basic_kernel(self):
        assert convert_name_to_signed("linux") == "linux-signed"

    def test_hwe_kernel(self):
        assert convert_name_to_signed("linux-hwe") == "linux-signed-hwe"

    def test_hwe_versioned_kernel(self):
        assert convert_name_to_signed("linux-hwe-5.4") == "linux-signed-hwe-5.4"

    def test_bad_kernel_name(self):
        with pytest.raises(ValueError):
            convert_name_to_signed("not-linux")


class TestKernelCNACVEs:
    def test_is_kernel_cna_cve(self):
        assert is_kernel_cna_cve('CVE-2024-26581')
        assert is_kernel_cna_cve('CVE-2024-24860') is False

    def test_get_affected_subsystems(self):
        break_commits, fix_commits = get_kernel_break_fix('CVE-2023-52447')
        assert fix_commits == ['876673364161da50eed6b472d746ef88242b2368', '876673364161da50eed6b472d746ef88242b2368']
        assert break_commits == ['bba1dc0b55ac462d24ed1228ad49800c238cd6d7', '638e4b825d523bed7a55e776c153049fb7716466']

        expected_subsystems = {'BPF subsystem': ['kernel/bpf/map_in_map.c', 'kernel/bpf/syscall.c']}
        expected_other_files = ['include/linux/bpf.h']

        config = read_uct_config()
        if 'linux_kernel_path' not in config:
            pytest.skip("linux_kernel_path not configured, skipping!")

        subsystems, other_files = get_affected_subsystems([fix_commits])
        assert subsystems == expected_subsystems
        assert other_files == expected_other_files

        fail_fix_commit = ['deadb33f']
        with pytest.raises(ValueError):
            get_affected_subsystems([fail_fix_commit])
